<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: auto;
  position: relative;
  width: 960px;
}

form {
  position: absolute;
  right: 10px;
  top: 10px;
}

.node {
  border: solid 1px white;
  font: 9px sans-serif;
  line-height: 12px;
  overflow: hidden;
  position: absolute;
  text-indent: 2px;
}

</style>
<form>
  <label><input type="radio" name="mode" value="House" checked> House</label>
  <label><input type="radio" name="mode" value="Senate"> Senate</label>
</form>

<!-- <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript" src="/data/skillsdata.js"></script> -->

<script>

var margin = {top: 40, right: 10, bottom: 10, left: 10},
    width = 960 - margin.left - margin.right,
    height = 700 - margin.top - margin.bottom;

// var color = d3.scale.category20c();

var color = {"ALP":"blue",
            "CLP":"grey",
            "DLP":"black",
            "Greens":"green",
            "Independent": "orange",
            "Katter's Australian Party": "yellow",         
            "LNP":"blue",
            "LNP / Independent": "blue",
            "Liberal": "blue"}
        

var treemap = d3.layout.treemap()
    .size([width, height])
    .sticky(true)
    .value(function(d) { return d.house === "MP" ? d.total : 0 });

var div = d3.select("body").append("div")
    .style("position", "relative")
    .style("width", (width + margin.left + margin.right) + "px")
    .style("height", (height + margin.top + margin.bottom) + "px")
    .style("left", margin.left + "px")
    .style("top", margin.top + "px");

d3.json("/data/2013expenses.json", function(error, root) {
  var node = div.datum(root).selectAll(".node")
      .data(treemap.nodes)
    .enter().append("div")
      .attr("class", "node")
      .call(position)
      .style("background", function(d) { return d.children ? color[d.name] : null; })
      .text(function(d) { return d.children ? null : d.politician; });

  d3.selectAll("input").on("change", function change() {
    var value = this.value === "House"
        ? function(d) { return d.house === "MP" ? d.total : 0 }
        : function(d) { return d.house ==="MP" ? 0 : d.total };

    node
        .data(treemap.value(value).nodes)
      .transition()
        .duration(800)
        .call(position);
  });
});

function position() {
  this.style("left", function(d) { return d.x + "px"; })
      .style("top", function(d) { return d.y + "px"; })
      .style("width", function(d) { return Math.max(0, d.dx - 1) + "px"; })
      .style("height", function(d) { return Math.max(0, d.dy - 1) + "px"; });
}


  var barchart = d3.select("#barchart").append("svg");
  var group = barchart.append("g");
  var data1 = [15, 20, 25];
  var barheight = 200;

  var bar = group.selectAll("rect")
            .data(data1)
            .enter()
            .append("rect")
            .attr("x", function(d,i) {
              return (i * 40);
            })
            .attr("y", (barheight))
            .attr("width", 30)
            .attr("height", function(d) {return d * -2})

</script>
